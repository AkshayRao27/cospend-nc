# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master, test ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  tests:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Use Node 14
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: mbstring, intl, sqlite3, curl, xml, json, zip, gd
          ini-values: post_max_size=256M, max_execution_time=180
          coverage: xdebug
          tools: php-cs-fixer, phpunit

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      #- name: Run a one-line script
      #  run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Perform PhpUnit tests
        if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt update -y
          sudo apt install python3-pip git sudo \
            unzip curl wget sed make rsync -y
          sudo -H pip3 install anybadge
          sudo curl --location --output /usr/local/bin/phpunit https://phar.phpunit.de/phpunit.phar
          sudo chmod +x /usr/local/bin/phpunit
          mkdir -p ~/html
          git clone https://github.com/nextcloud/server.git --recursive --depth 1 -b master ~/html/nextcloud
          sed -i $'s|if (substr($fullPath, 0, strlen($root) + 1) === $root . \'/\')|if (is_string($root) and substr($fullPath, 0, strlen($root) + 1) === $root . \'/\')|g' ~/html/nextcloud/lib/autoloader.php
          cp -r $GITHUB_WORKSPACE ~/html/nextcloud/apps/cospend
          php ~/html/nextcloud/occ maintenance:install --database "sqlite" --admin-user "admin" --admin-pass "password"
          php ~/html/nextcloud/occ app:enable cospend
          php ~/html/nextcloud/occ maintenance:mode --off
          echo "##### App is installed"
          #php ~/html/nextcloud/occ app:check-code cospend
          mkdir /tmp/coverage
          cd /tmp
          echo "##### PHPunit"
          XDEBUG_MODE=coverage phpunit --configuration ~/html/nextcloud/apps/cospend/phpunit.xml --coverage-text --color=never --coverage-html coverage > /tmp/cov.txt && SUCCESS=yes || SUCCESS=no
          echo "phpunit finished ############################"
          cat /tmp/cov.txt
          if [ $SUCCESS = "yes" ]; then echo "TESTS PASSED"; else echo "TESTS FAILED"; exit 1; fi
          echo "generating badge ############################"
          grep "^\s\+Lines:" /tmp/cov.txt > /tmp/cov.line.txt
          grep -o "[0-9]\+\.[0-9]\+" /tmp/cov.line.txt > /tmp/cov.value.txt
          mv /tmp/cov.value.txt /tmp/coverage/cov.value.txt
          echo "anybadge ############################"
          cat /tmp/coverage/cov.value.txt
          anybadge -l coverage -v `cat /tmp/coverage/cov.value.txt` -m "%.2f%%" -f /tmp/coverage/coverage.svg 50=red 70=orange 80=yellow 90=green

      - name: Upload coverage
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: /tmp/coverage

      - name: Deploy
        if: github.ref == 'refs/heads/master'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: /tmp/coverage
